{"ast":null,"code":"var _jsxFileName = \"/Users/merbashert/Desktop/Coding/Final_Project/mycraftybleep-front/crafty_app/src/components/NeedlePage.js\";\nimport React from 'react';\nimport NeedleForm from './NeedleForm';\nimport Needle from './Needles';\n\nclass NeedlePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchNeedle = () => {\n      fetch(`${this.props.baseUrl}/needles`).then(data => data.json()).then(jData => {\n        this.setState({\n          needles: jData\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleCreateNeedle = createData => {\n      fetch(`${this.props.baseUrl}/needles`, {\n        body: JSON.stringify(createData),\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(createdNeedle => {\n        return createdNeedle.json();\n      }).then(json => {\n        this.setState({\n          needles: json,\n          action: 'create'\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleUpdateNeedle = updateData => {\n      fetch(`${this.props.baseUrl}/needles/${updateData.id}`, {\n        body: JSON.stringify(updateData),\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(updatedNeedle => {\n        this.setState({\n          action: 'edit'\n        });\n        this.fetchNeedle();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleDeleteNeedle = id => {\n      fetch(`${this.props.baseUrl}/needles/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(json => {\n        this.setState({\n          needles: this.state.needles.filter(needle => needle.id !== id)\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      needles: []\n    };\n  }\n\n  componentDidMount() {\n    //loads right after the page does\n    this.fetchNeedle();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(NeedleForm, {\n      handleCreateNeedle: this.handleCreateNeedle,\n      formInputs: this.props.formInputs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"needles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.needles.map(needleData => React.createElement(Needle, {\n      key: needleData.id,\n      needleData: needleData,\n      handleDeleteNeedle: this.handleDeleteNeedle,\n      handleUpdateNeedle: this.handleUpdateNeedle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default NeedlePage;","map":{"version":3,"sources":["/Users/merbashert/Desktop/Coding/Final_Project/mycraftybleep-front/crafty_app/src/components/NeedlePage.js"],"names":["React","NeedleForm","Needle","NeedlePage","Component","constructor","props","fetchNeedle","fetch","baseUrl","then","data","json","jData","setState","needles","catch","err","console","log","handleCreateNeedle","createData","body","JSON","stringify","method","headers","createdNeedle","action","handleUpdateNeedle","updateData","id","updatedNeedle","handleDeleteNeedle","state","filter","needle","componentDidMount","render","formInputs","map","needleData"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport NeedleForm from './NeedleForm'\nimport Needle from './Needles'\n\n\n\nclass NeedlePage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            needles: []\n        }\n    }\n\n    fetchNeedle = () => {\n        fetch(`${this.props.baseUrl}/needles`)\n        .then(data => data.json())\n        .then(jData => {\n            this.setState({needles:jData})\n        }).catch(err=>console.log(err))\n    }\n\n    handleCreateNeedle = (createData) => {\n        fetch(`${this.props.baseUrl}/needles`, {\n            body: JSON.stringify(createData),\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(createdNeedle => {\n            return createdNeedle.json()\n        })\n        .then(json => {\n            this.setState({\n                needles: json,\n                action: 'create'\n            })\n        })\n        .catch(err=>console.log(err))\n    }\n\n    handleUpdateNeedle = (updateData) => {\n        fetch(`${this.props.baseUrl}/needles/${updateData.id}`, {\n            body: JSON.stringify(updateData),\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(updatedNeedle => {\n            this.setState({\n                action: 'edit'\n            })\n            this.fetchNeedle()\n        }).catch(err=>console.log(err))\n    }\n\n    handleDeleteNeedle = (id) => {\n        fetch(`${this.props.baseUrl}/needles/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(json => {\n            this.setState({\n                needles: this.state.needles.filter(needle => needle.id !== id)\n\n            })\n        }).catch(err=>console.log(err))\n    }\n    componentDidMount(){//loads right after the page does\n        this.fetchNeedle()\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n            <NeedleForm\n            handleCreateNeedle={this.handleCreateNeedle}\n            formInputs={this.props.formInputs}\n            />\n            <div className = \"needles\">\n            {this.state.needles.map((needleData) => (\n                <Needle\n                key={needleData.id}\n                needleData={needleData}\n                handleDeleteNeedle={this.handleDeleteNeedle}\n                handleUpdateNeedle={this.handleUpdateNeedle}\n                />\n\n            ))}\n            </div>\n\n            </React.Fragment>\n        )\n    }\n\n\n}\n\nexport default NeedlePage\n"]},"metadata":{},"sourceType":"module"}