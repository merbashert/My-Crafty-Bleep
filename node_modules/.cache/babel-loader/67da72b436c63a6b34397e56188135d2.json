{"ast":null,"code":"import _slicedToArray from \"/Users/merbashert/Desktop/Coding/Final_Project/mycraftybleep-front/crafty_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/merbashert/Desktop/Coding/Final_Project/mycraftybleep-front/crafty_app/src/components/NeedlePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport NeedleForm from './NeedleForm';\nimport Needle from './Needles';\n\nconst NeedlePage = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        needles = _useState2[0],\n        setNeedles = _useState2[1];\n\n  const fetchNeedle = () => {\n    fetch(`${props.baseUrl}/needles`).then(data => data.json()).then(jData => {\n      setNeedles(jData);\n    }).catch(err => console.log(err));\n  };\n\n  const handleCreateNeedle = createData => {\n    fetch(`${props.baseUrl}/needles`, {\n      body: JSON.stringify(createData),\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(createdNeedle => {\n      return createdNeedle.json();\n    }).then(json => {\n      setNeedles(json);\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateNeedle = updateData => {\n    fetch(`${props.baseUrl}/needles/${updateData.id}`, {\n      body: JSON.stringify(updateData),\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(updatedNeedle => {\n      fetchNeedle();\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchNeedle();\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(NeedleForm, {\n    handleCreateNeedle: handleCreateNeedle,\n    formInputs: props.formInputs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"needles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, needles.map(needleData => React.createElement(Needle, {\n    key: needleData.id,\n    needleData: needleData,\n    handleDeleteNeedle: handleDeleteNeedle,\n    handleUpdateNeedle: handleUpdateNeedle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))));\n};\n\nexport default NeedlePage;","map":{"version":3,"sources":["/Users/merbashert/Desktop/Coding/Final_Project/mycraftybleep-front/crafty_app/src/components/NeedlePage.js"],"names":["React","useState","useEffect","NeedleForm","Needle","NeedlePage","props","needles","setNeedles","fetchNeedle","fetch","baseUrl","then","data","json","jData","catch","err","console","log","handleCreateNeedle","createData","body","JSON","stringify","method","headers","createdNeedle","handleUpdateNeedle","updateData","id","updatedNeedle","formInputs","map","needleData","handleDeleteNeedle"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAIA,MAAMC,UAAU,GAAEC,KAAK,IAAI;AAAA,oBACOL,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QAChBM,OADgB;AAAA,QACPC,UADO;;AAGvB,QAAMC,WAAW,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAAE,GAAEJ,KAAK,CAACK,OAAQ,UAAlB,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,KAAK,IAAI;AACXP,MAAAA,UAAU,CAACO,KAAD,CAAV;AAEH,KALD,EAKGC,KALH,CAKSC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMH,GAPD;;AASA,QAAMG,kBAAkB,GAAIC,UAAD,IAAgB;AACvCX,IAAAA,KAAK,CAAE,GAAEJ,KAAK,CAACK,OAAQ,UAAlB,EAA6B;AAC9BW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,UAAf,CADwB;AAE9BI,MAAAA,MAAM,EAAE,MAFsB;AAG9BC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL,wBAAgB;AAFX;AAHqB,KAA7B,CAAL,CAOGd,IAPH,CAOQe,aAAa,IAAI;AACrB,aAAOA,aAAa,CAACb,IAAd,EAAP;AACH,KATD,EAUCF,IAVD,CAUME,IAAI,IAAI;AACVN,MAAAA,UAAU,CAACM,IAAD,CAAV;AACH,KAZD,EAaCE,KAbD,CAaOC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbZ;AAcH,GAfD;;AAiBA,QAAMW,kBAAkB,GAAIC,UAAD,IAAgB;AACvCnB,IAAAA,KAAK,CAAE,GAAEJ,KAAK,CAACK,OAAQ,YAAWkB,UAAU,CAACC,EAAG,EAA3C,EAA8C;AAC/CR,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeK,UAAf,CADyC;AAE/CJ,MAAAA,MAAM,EAAE,KAFuC;AAG/CC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL,wBAAgB;AAFX;AAHsC,KAA9C,CAAL,CAOGd,IAPH,CAOQmB,aAAa,IAAI;AACrBtB,MAAAA,WAAW;AACd,KATD,EASGO,KATH,CASSC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATd;AAUH,GAXD;;AAcAf,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW;AACd,GAFQ,CAAT;AAKA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AACA,IAAA,kBAAkB,EAAEW,kBADpB;AAEA,IAAA,UAAU,EAAEd,KAAK,CAAC0B,UAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAMA;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCzB,OAAO,CAAC0B,GAAR,CAAaC,UAAD,IACT,oBAAC,MAAD;AACA,IAAA,GAAG,EAAEA,UAAU,CAACJ,EADhB;AAEA,IAAA,UAAU,EAAEI,UAFZ;AAGA,IAAA,kBAAkB,EAAEC,kBAHpB;AAIA,IAAA,kBAAkB,EAAEP,kBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADD,CANA,CADJ;AAoBH,CApED;;AAsEA,eAAevB,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport NeedleForm from './NeedleForm'\nimport Needle from './Needles'\n\n\n\nconst NeedlePage= props => {\n    const [needles, setNeedles] = useState([])\n\n    const fetchNeedle = () => {\n        fetch(`${props.baseUrl}/needles`)\n        .then(data => data.json())\n        .then(jData => {\n            setNeedles(jData)\n\n        }).catch(err=>console.log(err))\n    }\n\n    const handleCreateNeedle = (createData) => {\n        fetch(`${props.baseUrl}/needles`, {\n            body: JSON.stringify(createData),\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(createdNeedle => {\n            return createdNeedle.json()\n        })\n        .then(json => {\n            setNeedles(json)\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const handleUpdateNeedle = (updateData) => {\n        fetch(`${props.baseUrl}/needles/${updateData.id}`, {\n            body: JSON.stringify(updateData),\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(updatedNeedle => {\n            fetchNeedle()\n        }).catch(err=>console.log(err))\n    }\n\n\n    useEffect(() => {\n        fetchNeedle();\n    })\n\n\n    return (\n        <React.Fragment>\n        <NeedleForm\n        handleCreateNeedle={handleCreateNeedle}\n        formInputs={props.formInputs}\n        />\n\n        <div className = \"needles\">\n        {needles.map((needleData) => (\n            <Needle\n            key={needleData.id}\n            needleData={needleData}\n            handleDeleteNeedle={handleDeleteNeedle}\n            handleUpdateNeedle={handleUpdateNeedle}\n            />\n        ))}\n        </div>\n\n        </React.Fragment>\n    )\n}\n\nexport default NeedlePage\n"]},"metadata":{},"sourceType":"module"}