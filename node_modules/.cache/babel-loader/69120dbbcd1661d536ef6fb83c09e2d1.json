{"ast":null,"code":"var _jsxFileName = \"/Users/merbashert/Desktop/Coding/Final_Project/mycraftybleep-front/crafty_app/src/components/RandomPage.js\";\nimport React from 'react';\nimport RandomFind from './RandomFind';\nimport RandomForm from './RandomForm';\nimport Random from './Random';\nimport box_picture1 from '../assets/box1.png';\nimport box_picture2 from '../assets/box2.png';\nimport box_picture3 from '../assets/box3.png';\n\nclass RandomPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        randomFilter: e.target.value\n      });\n    };\n\n    this.handleBox = e => {\n      this.setState({\n        boxNumberFilter: e.target.value\n      });\n    };\n\n    this.fetchRandom = () => {\n      fetch(`${this.props.baseUrl}/randoms`).then(data => data.json()).then(jData => {\n        this.setState({\n          randoms: jData\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleCreateRandom = createData => {\n      fetch(`${this.props.baseUrl}/randoms`, {\n        body: JSON.stringify(createData),\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(createdRandom => {\n        return createdRandom.json();\n      }).then(json => {\n        this.setState({\n          randoms: json\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleUpdateRandom = updateData => {\n      fetch(`${this.props.baseUrl}/randoms/${updateData.id}`, {\n        body: JSON.stringify(updateData),\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(updatedRandom => {\n        console.log(\"update data: \" + updateData);\n        this.fetchRandom();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleDeleteRandom = id => {\n      fetch(`${this.props.baseUrl}/randoms/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(json => {\n        this.setState({\n          randoms: this.state.randoms.filter(random => random.id !== id)\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.setBox1 = () => {\n      this.setState({\n        boxNumberFilter: '1'\n      });\n    };\n\n    this.setBox2 = () => {\n      this.setState({\n        boxNumberFilter: '2'\n      });\n    };\n\n    this.setBox3 = () => {\n      this.setState({\n        boxNumberFilter: '3'\n      });\n    };\n\n    this.state = {\n      randoms: [],\n      formInputs: {\n        name: null,\n        details: null,\n        box_number: null,\n        id: null\n      },\n      randomFilter: '',\n      boxNumberFilter: ''\n    };\n  }\n\n  componentDidMount() {\n    //loads right after the page does\n    this.fetchRandom();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(RandomForm, {\n      handleCreateRandom: this.handleCreateRandom,\n      handleUpdateRandom: this.handleUpdateRandom,\n      formInputs: this.props.formInputs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Search for item \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"filter\",\n      value: this.state.randomFilter,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"search-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.randoms.filter(random => {\n      return random.name === this.state.randomFilter;\n    }).map(randomData => React.createElement(RandomFind, {\n      key: randomData.id,\n      randomData: randomData,\n      handleDeleteRandom: this.handleDeleteRandom,\n      handleUpdateRandom: this.handleUpdateRandom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: box_picture1,\n      alt: \"box 1\",\n      onClick: this.setBox1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: box_picture2,\n      alt: \"box 2\",\n      onClick: this.setBox2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: box_picture3,\n      alt: \"box 3\",\n      onClick: this.setBox3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"random-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.randoms.filter(random => {\n      return random.box_number === this.state.boxNumberFilter;\n    }).map(randomData => React.createElement(Random, {\n      key: randomData.id,\n      randomData: randomData,\n      handleDeleteRandom: this.handleDeleteRandom,\n      handleUpdateRandom: this.handleUpdateRandom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default RandomPage;","map":{"version":3,"sources":["/Users/merbashert/Desktop/Coding/Final_Project/mycraftybleep-front/crafty_app/src/components/RandomPage.js"],"names":["React","RandomFind","RandomForm","Random","box_picture1","box_picture2","box_picture3","RandomPage","Component","constructor","props","handleChange","e","setState","randomFilter","target","value","handleBox","boxNumberFilter","fetchRandom","fetch","baseUrl","then","data","json","jData","randoms","catch","err","console","log","handleCreateRandom","createData","body","JSON","stringify","method","headers","createdRandom","handleUpdateRandom","updateData","id","updatedRandom","handleDeleteRandom","state","filter","random","setBox1","setBox2","setBox3","formInputs","name","details","box_number","componentDidMount","render","map","randomData"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport RandomFind from './RandomFind'\nimport RandomForm from './RandomForm'\nimport Random from './Random'\nimport box_picture1 from '../assets/box1.png'\nimport box_picture2 from '../assets/box2.png'\nimport box_picture3 from '../assets/box3.png'\n\nclass RandomPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            randoms: [],\n            formInputs: {\n                name: null,\n                details: null,\n                box_number:null,\n                id:null\n            },\n            randomFilter:'',\n            boxNumberFilter:''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            randomFilter: e.target.value\n        })\n    }\n\n    handleBox = (e) => {\n        this.setState({\n            boxNumberFilter:e.target.value\n        })\n    }\n\n\n    fetchRandom = () => {\n        fetch(`${this.props.baseUrl}/randoms`)\n        .then(data => data.json())\n        .then(jData => {\n            this.setState({\n                randoms:jData\n            })\n        }).catch(err=>console.log(err))\n    }\n\n    handleCreateRandom = (createData) => {\n        fetch(`${this.props.baseUrl}/randoms`, {\n            body: JSON.stringify(createData),\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(createdRandom => {\n            return createdRandom.json()\n        })\n        .then(json => {\n            this.setState({\n                randoms: json\n            })\n        })\n        .catch(err=>console.log(err))\n    }\n\n    handleUpdateRandom = (updateData) => {\n        fetch(`${this.props.baseUrl}/randoms/${updateData.id}`, {\n            body: JSON.stringify(updateData),\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(updatedRandom => {\n            console.log(\"update data: \" + updateData);\n            this.fetchRandom()\n        }).catch(err=>console.log(err))\n    }\n\n    handleDeleteRandom = (id) => {\n        fetch(`${this.props.baseUrl}/randoms/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(json => {\n            this.setState({\n                randoms: this.state.randoms.filter(random => random.id !== id)\n\n            })\n        }).catch(err=>console.log(err))\n    }\n\n    setBox1 = () => {\n        this.setState({\n            boxNumberFilter:'1'\n        })\n    }\n    setBox2 = () => {\n        this.setState({\n            boxNumberFilter:'2'\n        })\n    }\n    setBox3 = () => {\n        this.setState({\n            boxNumberFilter:'3'\n        })\n    }\n\n    componentDidMount(){//loads right after the page does\n        this.fetchRandom()\n    }\n\n\n    render() {\n        return (\n\n            <div>\n\n\n            <RandomForm\n            handleCreateRandom={this.handleCreateRandom}\n            handleUpdateRandom={this.handleUpdateRandom}\n            formInputs={this.props.formInputs}\n            />\n\n\n            <label htmlFor=\"filter\">Search for item </label>\n            <input type=\"text\" id=\"filter\"\n            value={this.state.randomFilter}\n            onChange={this.handleChange}/>\n\n\n            <div className=\"search-box\">\n            {this.state.randoms.filter(random=>{\n                return random.name === this.state.randomFilter\n            }).map((randomData) => (\n                <RandomFind\n                key={randomData.id}\n                randomData={randomData}\n                handleDeleteRandom={this.handleDeleteRandom}\n                handleUpdateRandom={this.handleUpdateRandom}\n                />\n            ))}\n\n            </div>\n            <br/>\n                <img src={box_picture1} alt=\"box 1\" onClick={this.setBox1}/>\n                <img src={box_picture2} alt=\"box 2\" onClick={this.setBox2}/>\n                <img src={box_picture3} alt=\"box 3\" onClick={this.setBox3}/>\n\n            <div className=\"random-box\">\n\n            {this.state.randoms.filter(random=>{\n                return random.box_number === this.state.boxNumberFilter\n            }).map((randomData) => (\n                <Random\n                key={randomData.id}\n                randomData={randomData}\n                handleDeleteRandom={this.handleDeleteRandom}\n                handleUpdateRandom={this.handleUpdateRandom}\n                />\n\n            ))}\n            </div>\n\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default RandomPage\n"]},"metadata":{},"sourceType":"module"}