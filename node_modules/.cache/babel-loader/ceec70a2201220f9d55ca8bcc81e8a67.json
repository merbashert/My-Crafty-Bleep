{"ast":null,"code":"import _slicedToArray from \"/Users/merbashert/Desktop/Coding/Final_Project/mycraftybleep-front/crafty_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/merbashert/Desktop/Coding/Final_Project/mycraftybleep-front/crafty_app/src/components/RandomPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport RandomFind from './RandomFind';\nimport RandomForm from './RandomForm';\nimport Random from './Random';\nimport box_picture1 from '../assets/box1.png';\nimport box_picture2 from '../assets/box2.png';\nimport box_picture3 from '../assets/box3.png';\n\nconst RandomPage = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        randoms = _useState2[0],\n        setRandoms = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        randomFilter = _useState4[0],\n        setRandomFilter = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        boxNumberFilter = _useState6[0],\n        setBoxNumberFilter = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        formInputs = _useState8[0],\n        setFormInputs = _useState8[1];\n\n  const handleChange = e => {\n    setRandomFilter(e.target.value);\n  };\n\n  const handleBox = e => {\n    setBoxNumberFilter(e.target.value);\n  };\n\n  const fetchRandom = () => {\n    fetch(`${props.baseUrl}/randoms`).then(data => data.json()).then(jData => {\n      setRandoms(jData);\n    }).catch(err => console.log(err));\n  };\n\n  const handleCreateRandom = createData => {\n    fetch(`${props.baseUrl}/randoms`, {\n      body: JSON.stringify(createData),\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(createdRandom => {\n      return createdRandom.json();\n    }).then(json => {\n      setRandoms(json);\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateRandom = updateData => {\n    fetch(`${props.baseUrl}/randoms/${updateData.id}`, {\n      body: JSON.stringify(updateData),\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(updatedRandom => {\n      fetchRandom();\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteRandom = id => {\n    fetch(`${props.baseUrl}/randoms/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(json => {\n      setRandoms(randoms.filter(random => random.id !== id));\n    }).catch(err => console.log(err));\n  };\n\n  const setBox1 = () => {\n    setBoxNumberFilter('1');\n  };\n\n  const setBox2 = () => {\n    setBoxNumberFilter('2');\n  };\n\n  const setBox3 = () => {\n    setBoxNumberFilter('3');\n  };\n\n  useEffect(() => {\n    fetchRandom();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(RandomForm, {\n    handleCreateRandom: handleCreateRandom,\n    handleUpdateRandom: handleUpdateRandom,\n    formInputs: props.formInputs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Search for item \"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"filter\",\n    value: randomFilter,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"search-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, randoms.filter(random => {\n    return random.name === randomFilter;\n  }).map(randomData => React.createElement(RandomFind, {\n    key: randomData.id,\n    randomData: randomData,\n    handleDeleteRandom: handleDeleteRandom,\n    handleUpdateRandom: handleUpdateRandom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: box_picture1,\n    alt: \"box 1\",\n    onClick: setBox1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: box_picture2,\n    alt: \"box 2\",\n    onClick: setBox2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: box_picture3,\n    alt: \"box 3\",\n    onClick: setBox3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"random-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"random-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Box\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, randoms.filter(random => {\n    return random.box_number === boxNumberFilter;\n  }).map(randomData => React.createElement(Random, {\n    key: randomData.id,\n    randomData: randomData,\n    handleDeleteRandom: handleDeleteRandom,\n    handleUpdateRandom: handleUpdateRandom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))))));\n};\n\nexport default RandomPage;","map":{"version":3,"sources":["/Users/merbashert/Desktop/Coding/Final_Project/mycraftybleep-front/crafty_app/src/components/RandomPage.js"],"names":["React","useState","useEffect","RandomFind","RandomForm","Random","box_picture1","box_picture2","box_picture3","RandomPage","props","randoms","setRandoms","randomFilter","setRandomFilter","boxNumberFilter","setBoxNumberFilter","formInputs","setFormInputs","handleChange","e","target","value","handleBox","fetchRandom","fetch","baseUrl","then","data","json","jData","catch","err","console","log","handleCreateRandom","createData","body","JSON","stringify","method","headers","createdRandom","handleUpdateRandom","updateData","id","updatedRandom","handleDeleteRandom","filter","random","setBox1","setBox2","setBox3","name","map","randomData","box_number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport RandomFind from './RandomFind'\nimport RandomForm from './RandomForm'\nimport Random from './Random'\nimport box_picture1 from '../assets/box1.png'\nimport box_picture2 from '../assets/box2.png'\nimport box_picture3 from '../assets/box3.png'\n\nconst RandomPage = props => {\n    const[randoms, setRandoms] = useState([])\n    const[randomFilter, setRandomFilter] = useState('')\n    const[boxNumberFilter, setBoxNumberFilter] = useState('')\n    const[formInputs, setFormInputs] = useState(null)\n\n\n    const handleChange = (e) => {\n        setRandomFilter(e.target.value)\n    }\n\n    const handleBox = (e) => {\n        setBoxNumberFilter(e.target.value)\n    }\n\n\n    const fetchRandom = () => {\n        fetch(`${props.baseUrl}/randoms`)\n        .then(data => data.json())\n        .then(jData => {\n            setRandoms(jData)\n        }).catch(err=>console.log(err))\n    }\n\n    const handleCreateRandom = (createData) => {\n        fetch(`${props.baseUrl}/randoms`, {\n            body: JSON.stringify(createData),\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(createdRandom => {\n            return createdRandom.json()\n        })\n        .then(json => {\n            setRandoms(json)\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const handleUpdateRandom = (updateData) => {\n        fetch(`${props.baseUrl}/randoms/${updateData.id}`, {\n            body: JSON.stringify(updateData),\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(updatedRandom => {\n            fetchRandom()\n        }).catch(err=>console.log(err))\n    }\n\n    const handleDeleteRandom = (id) => {\n        fetch(`${props.baseUrl}/randoms/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(json => {\n            setRandoms(randoms.filter(random => random.id !== id))\n        }).catch(err=>console.log(err))\n    }\n\n    const setBox1 = () => {\n        setBoxNumberFilter('1')\n    }\n    const setBox2 = () => {\n        setBoxNumberFilter('2')\n    }\n    const setBox3 = () => {\n        setBoxNumberFilter('3')\n    }\n\n    useEffect(() => {\n        fetchRandom();\n    }, [])\n\n\n        return (\n\n            <div>\n\n\n            <RandomForm\n            handleCreateRandom={handleCreateRandom}\n            handleUpdateRandom={handleUpdateRandom}\n            formInputs={props.formInputs}\n            />\n\n\n            <label htmlFor=\"filter\">Search for item </label>\n            <input type=\"text\" id=\"filter\"\n            value={randomFilter}\n            onChange={handleChange}/>\n\n\n            <div className=\"search-box\">\n            {randoms.filter(random=>{\n                return random.name === randomFilter\n            }).map((randomData) => (\n                <RandomFind\n                key={randomData.id}\n                randomData={randomData}\n                handleDeleteRandom={handleDeleteRandom}\n                handleUpdateRandom={handleUpdateRandom}\n                />\n            ))}\n\n            </div>\n            <br/>\n                <img src={box_picture1} alt=\"box 1\" onClick={setBox1}/>\n                <img src={box_picture2} alt=\"box 2\" onClick={setBox2}/>\n                <img src={box_picture3} alt=\"box 3\" onClick={setBox3}/>\n\n            <div className=\"random-box\">\n            <table className=\"random-table\">\n            <thead><tr><th>Box</th></tr></thead>\n            <tbody>\n            {randoms.filter(random=>{\n                return random.box_number === boxNumberFilter\n            }).map((randomData) => (\n                <Random\n                key={randomData.id}\n                randomData={randomData}\n                handleDeleteRandom={handleDeleteRandom}\n                handleUpdateRandom={handleUpdateRandom}\n                />\n\n            ))}\n            </tbody>\n            </table>\n            </div>\n\n\n            </div>\n        )\n}\n\nexport default RandomPage\n"]},"metadata":{},"sourceType":"module"}